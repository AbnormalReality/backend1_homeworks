# настройки запуска
run:
  # значение конкурентности устанавливаем по количеству CPU
  concurrency: 4

  # анализ не должен превышать
  timeout: 1m

  # выводить "exit-code" при наличии хотя бы одного сообщения
  issues-exit-code: 1

  # не включать анализ тестов
  tests: false

  # Пропускать папки вендора, сторонних зависимостей и т.д.
  #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

  # Пропускать файлы, заканчивающиеся на .bad.go
  skip-files:
    - ".*\\.bad\\.go$"

# список линтеров
linters:
  disable-all: true
  enable:
  - gofmt # форматирование кода (пробелы, отступы, скобки)
  - goimports # обновление списка imports
  - govet # общий анализ возможных багов
  - goconst # нахождение строк, которые следует вынести в константы
  - bodyclose # проверка на незакрытые body после чтения тела ответа
  - errcheck # проверка на обработку всех ошибок
  - deadcode # детектирование не использованного кода
  - unused # детектирование не использованных констант, переменных, функций и т.д
  - errname # детектирование ошибок имен,префиксов,синтаксиса
  - revive # Fast, configurable, extensible, flexible, and beautiful linter for Go. Drop-in replacement of golint.


# настройки отдельных линтеров
linters-settings:
  govet:
    # проверка на использование переменных «в тени»
    check-shadowing: true
  goconst:
    # goconst находит строки не меньше 2 символов, которые встречаются хотя бы 2 раза
    min-len: 2
    min-occurrences: 2
